Testfile2
-----------------  
SRC int    x; int    x;
                   
    int    x; int    x;
                     ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC bool   x; bool   x;
                   
    bool   x; bool   x;
                     ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC string x; string x;
                   
    string x; string x;
                     ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC int    x; bool   x;
                   
    int    x; bool   x;
                     ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC bool   x; string x;
                   
    bool   x; string x;
                     ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC string x; int    x;
                   
    string x; int    x;
                     ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC int    x; write(17); int    x;
                   
    int    x; write(17); int    x;
                                ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC bool   x; write(17); bool   x;
                   
    bool   x; write(17); bool   x;
                                ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC string x; write(17); string x;
                   
    string x; write(17); string x;
                                ^
ALG.TMP, line 1: Double declaration
-----------------  
SRC write(x);
                   
    write(x);
          ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC writeln(x);
                   
    writeln(x);
            ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x := y;
                   
    int    x := y;
                ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x := y;
                   
    bool   x := y;
                ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC string x := y;
                   
    string x := y;
                ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; x := y;
                   
    int    x; x := y;
                   ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x; x := y;
                   
    bool   x; x := y;
                   ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC string x; x := y;
                   
    string x; x := y;
                   ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC read(x);
                   
    read(x);
         ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(x+x+y);
                   
    int    x; write(x+x+y);
                        ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(x-y-x);
                   
    int    x; write(x-y-x);
                      ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(y*x*y);
                   
    int    x; write(y*x*y);
                    ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(x/x/y);
                   
    int    x; write(x/x/y);
                        ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(x+x-x*x/y);
                   
    int    x; write(x+x-x*x/y);
                            ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(x/x*y+x-x);
                   
    int    x; write(x/x*y+x-x);
                        ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write( x + -y);
                   
    int    x; write( x + -y);
                          ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(-y -  x);
                   
    int    x; write(-y -  x);
                     ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x; write(x or  x or  y);
                   
    bool   x; write(x or  x or  y);
                                ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x; write(y and x and x);
                   
    bool   x; write(y and x and x);
                    ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x; write(x or  not y);
                   
    bool   x; write(x or  not y);
                              ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x; write(not y and x);
                   
    bool   x; write(not y and x);
                        ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(x =  y);
                   
    int    x; write(x =  y);
                         ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x; write(y =  x);
                   
    bool   x; write(y =  x);
                    ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC string x; write(x =  y);
                   
    string x; write(x =  y);
                         ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x; write(y != x);
                   
    int    x; write(y != x);
                    ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC bool   x; write(x != y);
                   
    bool   x; write(x != y);
                         ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC string x; write(y != x);
                   
    string x; write(y != x);
                    ^
ALG.TMP, line 1: Undeclared variable
-----------------  
SRC int    x := true ;
                   
    int    x := true ;
    ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC int    x := "123";
                   
    int    x := "123";
    ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC bool   x := "123";
                   
    bool   x := "123";
    ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC bool   x := 2    ;
                   
    bool   x := 2    ;
    ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC string x := 2    ;
                   
    string x := 2    ;
    ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC string x := true ;
                   
    string x := true ;
    ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC bool   y; int    x := y;
                   
    bool   y; int    x := y;
              ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC string y; int    x := y;
                   
    string y; int    x := y;
              ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC string y; bool   x := y;
                   
    string y; bool   x := y;
              ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC int    y; bool   x := y;
                   
    int    y; bool   x := y;
              ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC int    y; string x := y;
                   
    int    y; string x := y;
              ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC bool   y; string x := y;
                   
    bool   y; string x := y;
              ^
ALG.TMP, line 1: Type error in variable declaration
-----------------  
SRC int    x; x:= true ;
                   
    int    x; x:= true ;
              ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC int    x; x:= "123";
                   
    int    x; x:= "123";
              ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC bool   x; x:= "123";
                   
    bool   x; x:= "123";
              ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC bool   x; x:= 2    ;
                   
    bool   x; x:= 2    ;
              ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC string x; x:= 2    ;
                   
    string x; x:= 2    ;
              ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC string x; x:= true ;
                   
    string x; x:= true ;
              ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC bool   y; int    x; x := y;
                   
    bool   y; int    x; x := y;
                        ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC string y; int    x; x := y;
                   
    string y; int    x; x := y;
                        ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC string y; bool   x; x := y;
                   
    string y; bool   x; x := y;
                        ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC int    y; bool   x; x := y;
                   
    int    y; bool   x; x := y;
                        ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC int    y; string x; x := y;
                   
    int    y; string x; x := y;
                        ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC bool   y; string x; x := y;
                   
    bool   y; string x; x := y;
                        ^
ALG.TMP, line 1: Type error in assignment
-----------------  
SRC writeln(   3 + true );
                   
    writeln(   3 + true );
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(   3 + "123");
                   
    writeln(   3 + "123");
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true + "123");
                   
    writeln(true + "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true +    3 );
                   
    writeln(true +    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"+    3 );
                   
    writeln("123"+    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"+ true );
                   
    writeln("123"+ true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true + true );
                   
    writeln(true + true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"+ "123");
                   
    writeln("123"+ "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(   3 - true );
                   
    writeln(   3 - true );
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(   3 - "123");
                   
    writeln(   3 - "123");
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true - "123");
                   
    writeln(true - "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true -    3 );
                   
    writeln(true -    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"-    3 );
                   
    writeln("123"-    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"- true );
                   
    writeln("123"- true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true - true );
                   
    writeln(true - true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"- "123");
                   
    writeln("123"- "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(   3 * true );
                   
    writeln(   3 * true );
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(   3 * "123");
                   
    writeln(   3 * "123");
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true * "123");
                   
    writeln(true * "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true *    3 );
                   
    writeln(true *    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"*    3 );
                   
    writeln("123"*    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"* true );
                   
    writeln("123"* true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true * true );
                   
    writeln(true * true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"* "123");
                   
    writeln("123"* "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(   3 / true );
                   
    writeln(   3 / true );
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(   3 / "123");
                   
    writeln(   3 / "123");
               ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true / "123");
                   
    writeln(true / "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true /    3 );
                   
    writeln(true /    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"/    3 );
                   
    writeln("123"/    3 );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"/ true );
                   
    writeln("123"/ true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(true / true );
                   
    writeln(true / true );
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln("123"/ "123");
                   
    writeln("123"/ "123");
            ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC writeln(-"123");
                   
    writeln(-"123");
            ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC writeln(-true);
                   
    writeln(-true);
            ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC int    x; bool   y; writeln(x+y);
                   
    int    x; bool   y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC int    x; string y; writeln(x+y);
                   
    int    x; string y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; string y; writeln(x+y);
                   
    bool   x; string y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; int    y; writeln(x+y);
                   
    bool   x; int    y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; int    y; writeln(x+y);
                   
    string x; int    y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; bool   y; writeln(x+y);
                   
    string x; bool   y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; bool   y; writeln(x+y);
                   
    bool   x; bool   y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; string y; writeln(x+y);
                   
    string x; string y; writeln(x+y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC int    x; bool   y; writeln(x-y);
                   
    int    x; bool   y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC int    x; string y; writeln(x-y);
                   
    int    x; string y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; string y; writeln(x-y);
                   
    bool   x; string y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; int    y; writeln(x-y);
                   
    bool   x; int    y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; int    y; writeln(x-y);
                   
    string x; int    y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; bool   y; writeln(x-y);
                   
    string x; bool   y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; bool   y; writeln(x-y);
                   
    bool   x; bool   y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; string y; writeln(x-y);
                   
    string x; string y; writeln(x-y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC int    x; bool   y; writeln(x*y);
                   
    int    x; bool   y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC int    x; string y; writeln(x*y);
                   
    int    x; string y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; string y; writeln(x*y);
                   
    bool   x; string y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; int    y; writeln(x*y);
                   
    bool   x; int    y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; int    y; writeln(x*y);
                   
    string x; int    y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; bool   y; writeln(x*y);
                   
    string x; bool   y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; bool   y; writeln(x*y);
                   
    bool   x; bool   y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; string y; writeln(x*y);
                   
    string x; string y; writeln(x*y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC int    x; bool   y; writeln(x/y);
                   
    int    x; bool   y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC int    x; string y; writeln(x/y);
                   
    int    x; string y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; string y; writeln(x/y);
                   
    bool   x; string y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; int    y; writeln(x/y);
                   
    bool   x; int    y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; int    y; writeln(x/y);
                   
    string x; int    y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; bool   y; writeln(x/y);
                   
    string x; bool   y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC bool   x; bool   y; writeln(x/y);
                   
    bool   x; bool   y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; string y; writeln(x/y);
                   
    string x; string y; writeln(x/y);
                                ^
ALG.TMP, line 1: Operand of binary arithmetic operator is not int
-----------------  
SRC string x; writeln(-x);
                   
    string x; writeln(-x);
                      ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC bool   x; writeln(-x);
                   
    bool   x; writeln(-x);
                      ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC writeln(   3  or true );
                   
    writeln(   3  or true );
               ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(   3  or "123");
                   
    writeln(   3  or "123");
               ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(true  or "123");
                   
    writeln(true  or "123");
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(true  or    3 );
                   
    writeln(true  or    3 );
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln("123" or    3 );
                   
    writeln("123" or    3 );
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln("123" or true );
                   
    writeln("123" or true );
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(   3  and true );
                   
    writeln(   3  and true );
               ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(   3  and "123");
                   
    writeln(   3  and "123");
               ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(true  and "123");
                   
    writeln(true  and "123");
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(true  and    3 );
                   
    writeln(true  and    3 );
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln("123" and    3 );
                   
    writeln("123" and    3 );
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln("123" and true );
                   
    writeln("123" and true );
            ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC writeln(not "123");
                   
    writeln(not "123");
            ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC writeln(not    3 );
                   
    writeln(not    3 );
            ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC int    x; bool   y; writeln(x or y);
                   
    int    x; bool   y; writeln(x or y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC int    x; string y; writeln(x or y);
                   
    int    x; string y; writeln(x or y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC bool   x; string y; writeln(x or y);
                   
    bool   x; string y; writeln(x or y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC bool   x; int    y; writeln(x or y);
                   
    bool   x; int    y; writeln(x or y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC string x; int    y; writeln(x or y);
                   
    string x; int    y; writeln(x or y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC string x; bool   y; writeln(x or y);
                   
    string x; bool   y; writeln(x or y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC int    x; bool   y; writeln(x and y);
                   
    int    x; bool   y; writeln(x and y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC int    x; string y; writeln(x and y);
                   
    int    x; string y; writeln(x and y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC bool   x; string y; writeln(x and y);
                   
    bool   x; string y; writeln(x and y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC bool   x; int    y; writeln(x and y);
                   
    bool   x; int    y; writeln(x and y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC string x; int    y; writeln(x and y);
                   
    string x; int    y; writeln(x and y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC string x; bool   y; writeln(x and y);
                   
    string x; bool   y; writeln(x and y);
                                ^
ALG.TMP, line 1: Operand of binary bool operator is not bool
-----------------  
SRC string x; writeln(not x);
                   
    string x; writeln(not x);
                      ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC int    x; writeln(not x);
                   
    int    x; writeln(not x);
                      ^
ALG.TMP, line 1: Operand of unary operator has wrong type
-----------------  
SRC writeln(   3 = true );
                   
    writeln(   3 = true );
               ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln(   3 = "123");
                   
    writeln(   3 = "123");
               ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln(true = "123");
                   
    writeln(true = "123");
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln(true =    3 );
                   
    writeln(true =    3 );
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln("123"=    3 );
                   
    writeln("123"=    3 );
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln("123"= true );
                   
    writeln("123"= true );
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln(   3 != true );
                   
    writeln(   3 != true );
               ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln(   3 != "123");
                   
    writeln(   3 != "123");
               ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln(true != "123");
                   
    writeln(true != "123");
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln(true !=    3 );
                   
    writeln(true !=    3 );
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln("123"!=    3 );
                   
    writeln("123"!=    3 );
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC writeln("123"!= true );
                   
    writeln("123"!= true );
            ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC int    x; bool   y; writeln(x=y);
                   
    int    x; bool   y; writeln(x=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC int    x; string y; writeln(x=y);
                   
    int    x; string y; writeln(x=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC bool   x; string y; writeln(x=y);
                   
    bool   x; string y; writeln(x=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC bool   x; int    y; writeln(x=y);
                   
    bool   x; int    y; writeln(x=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC string x; int    y; writeln(x=y);
                   
    string x; int    y; writeln(x=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC string x; bool   y; writeln(x=y);
                   
    string x; bool   y; writeln(x=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC int    x; bool   y; writeln(x!=y);
                   
    int    x; bool   y; writeln(x!=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC int    x; string y; writeln(x!=y);
                   
    int    x; string y; writeln(x!=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC bool   x; string y; writeln(x!=y);
                   
    bool   x; string y; writeln(x!=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC bool   x; int    y; writeln(x!=y);
                   
    bool   x; int    y; writeln(x!=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC string x; int    y; writeln(x!=y);
                   
    string x; int    y; writeln(x!=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
-----------------  
SRC string x; bool   y; writeln(x!=y);
                   
    string x; bool   y; writeln(x!=y);
                                ^
ALG.TMP, line 1: Operands of a comparison are of different types
